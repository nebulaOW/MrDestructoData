variables
{
	global:
		110: MrDestructoVector
		111: MrDestructoFacing
		112: MrDestructo
		113: MrDestructonametag
		114: i

	player:
		110: isInvincible
}

subroutines
{
	110: MrDestructo
}

rule("J: 15. Mr Destructo Data")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.i = 0;
			Global.MrDestructoVector = Array(0, Vector(-97.161, 13.459, -102.302), Vector(-98.499, 13.653, -104.347), Vector(-96.753, 13.212,
			-102.748), Vector(-98.546, 13.808, -103.971), Vector(-95.892, 15, -95.990), Vector(-95.496, 15, -95.197), Vector(-95.210, 15,
			-94.624), Vector(-96.691, 15, -93.935), Vector(-98.826, 15, -92.843), Vector(-98.957, 15, -92.778), Vector(-100.102, 15,
			-92.273), Vector(-101.835, 15, -91.420), Vector(-103.278, 15, -90.686), Vector(-104.792, 15, -89.937), Vector(-105.210, 15,
			-91.019), Vector(-108.927, 13.869, -96.546), Vector(-109.912, 13.306, -96.019), Vector(-109.695, 14.089, -99.071), Vector(
			-111.533, 13.062, -98.169), Vector(-123.038, 13, -79.675), Vector(-122.318, 13, -78.472), Vector(-121.909, 13, -77.521),
			Vector(-121.242, 13, -76.289), Vector(-120.669, 13, -75.125), Vector(-116.984, 13, -81.994), Vector(-116.395, 13, -80.764),
			Vector(-115.739, 13, -79.348), Vector(-115.101, 13, -78.052), Vector(-78.338, 13.099, -99.445), Vector(-77.550, 13.659,
			-98.484), Vector(-76.867, 14.430, -97.103), Vector(-80.569, 13, -98.638), Vector(-79.782, 13.828, -97.032), Vector(-78.911,
			14.816, -95.257), Vector(-83.040, 15, -89.907), Vector(-82.067, 15, -88.216), Vector(-80.122, 15, -84.545), Vector(-79.140, 15,
			-82.873), Vector(-73.906, 15, -84.406), Vector(-72.678, 15, -85.353), Vector(-71.015, 15, -85.642), Vector(-68.469, 15,
			-86.896), Vector(-66.812, 15, -87.713), Vector(-65.554, 15, -88.333), Vector(-62.714, 14.427, -87.682), Vector(-62.095, 13.728,
			-86.424), Vector(-61.450, 13.070, -85.271), Vector(-59.289, 14.595, -89.708), Vector(-58.536, 13.925, -88.613), Vector(-57.784,
			13.059, -87.052), Vector(-58.386, 13, -77.885), Vector(-57.723, 13, -76.505), Vector(-57.001, 13, -74.954), Vector(-64.570,
			13.001, -73.829), Vector(-63.850, 13.001, -72.364), Vector(-106.327, 10.327, -56), Vector(-105.790, 10.879, -55.043), Vector(
			-104.984, 11.824, -53.327), Vector(-105.955, 12, -51.665), Vector(-107.522, 12, -50.893), Vector(-109.235, 12, -50.049),
			Vector(-100.946, 12, -56.675), Vector(-101.680, 12, -58.162), Vector(-102.409, 12, -59.765), Vector(-102.966, 12, -60.769),
			Vector(-91.132, 10.714, -29.678), Vector(-90.561, 9.912, -28.236), Vector(-92.253, 9.976, -26.938), Vector(-93.681, 9.975,
			-26.225), Vector(-87.014, 11.016, -31.505), Vector(-85.999, 11.014, -31.608), Vector(-51.042, 11.031, -63.860), Vector(-50.307,
			11.031, -62.357), Vector(-49.656, 11.029, -60.894), Vector(-48.370, 11.029, -61.587), Vector(-58.273, 11, -60.058), Vector(
			-57.455, 11, -58.415), Vector(-57.047, 11, -57.253), Vector(-58.930, 10.982, -56.325), Vector(-61.255, 10.971, -55.180),
			Vector(-63.739, 10.969, -54.006), Vector(-65.426, 10.968, -53.218), Vector(-84.143, 11.990, -13.411), Vector(-83.536, 11.999,
			-12.180), Vector(-83.170, 12.002, -11.435), Vector(-82.303, 12.937, -8.878), Vector(-81.247, 13.148, -7.369), Vector(-80.427,
			12.959, -4.553), Vector(-78.722, 12.073, -2.382), Vector(-56.300, 14.990, -6.037), Vector(-55.393, 14.991, -6.948), Vector(
			-54.471, 14.992, -7.868), Vector(-53.287, 14.990, -9.053), Vector(-52.002, 14.588, -10.355), Vector(-50.726, 13.991, -11.619),
			Vector(-49.251, 13.992, -13.098), Vector(-53.775, 14.990, -4.417), Vector(-52.568, 14.991, -5.619), Vector(-51.724, 14.990,
			-6.469), Vector(-50.634, 14.991, -7.560), Vector(-49.221, 14.102, -9.050), Vector(-47.600, 13.990, -8.366), Vector(-46.160,
			13.991, -6.795), Vector(-44.546, 13.991, -5.182), Vector(-43.055, 13.991, -3.690), Vector(-41.500, 13.991, -2.137), Vector(
			-40.888, 13.990, -18.941), Vector(-39.619, 13.991, -17.602), Vector(-38.188, 13.991, -16.170), Vector(-37.052, 13.990,
			-15.029), Vector(-33.490, 13.990, -11.291), Vector(-33.068, 13.990, -10.354), Vector(-33.068, 13.992, -8.461), Vector(-33.088,
			13.992, -6.720), Vector(-34.413, 13.945, -5.383), Vector(-35.646, 13.075, -4.152), Vector(-36.956, 12.148, -2.841), Vector(
			-38.299, 11.199, -1.498), Vector(-39.674, 10.228, -0.125), Vector(-66.944, 11.990, 12.591), Vector(-65.989, 11.990, 13.546),
			Vector(-64.644, 11.990, 14.892), Vector(-63.347, 11.990, 16.157), Vector(-61.684, 11.965, 17.852), Vector(-58.009, 11.990,
			21.527), Vector(-56.683, 11.990, 22.854), Vector(-54.749, 11.990, 24.787), Vector(-52.935, 11.990, 26.601), Vector(-51.233,
			15.998, 26.044), Vector(-51.800, 15.998, 25.477), Vector(-50.684, 15.998, 24.360), Vector(-48.640, 15.998, 22.316), Vector(
			-47.192, 15.998, 20.869), Vector(-47.192, 15.998, 20.869), Vector(-40.600, 15.979, 19.540), Vector(-39.429, 15.950, 18.220),
			Vector(-38.877, 15.939, 17.694), Vector(-38.159, 15.946, 18.413), Vector(-36.319, 15.975, 20.253), Vector(-34.929, 15.992,
			21.644), Vector(-33.193, 14.990, 23.046), Vector(-31.620, 14.990, 21.548), Vector(-30.012, 14.990, 19.940), Vector(-28.190,
			14.990, 18.118), Vector(-26.373, 14.990, 16.302), Vector(-25.764, 14.990, 14.645), Vector(-27.149, 14.019, 13.527), Vector(
			-28.922, 12.990, 11.755), Vector(-30.200, 12.990, 9.710), Vector(-29.296, 12.990, 8.208), Vector(-27.547, 12.990, 4.178),
			Vector(-28.746, 12.990, 2.979), Vector(-28.843, 12.990, 1.934), Vector(-26.923, 12.853, 0.015), Vector(-25.479, 11.832,
			-1.429), Vector(-23.768, 10.621, -3.141), Vector(-14.239, 10.313, -62.225), Vector(-12.863, 11.285, -63.601), Vector(-11.640,
			12, -64.824), Vector(-9.977, 13.327, -66.487), Vector(-8.852, 14, -67.699), Vector(-6.689, 14, -66.354), Vector(-5.541, 14,
			-65.149), Vector(-6.517, 14.584, -63.774), Vector(-7.918, 15.510, -62.558), Vector(-9.194, 16, -61.302), Vector(-10.670, 16,
			-59.826), Vector(-10.379, 16, -56.908), Vector(-11.640, 16, -56.451), Vector(-13.189, 16, -56.451), Vector(-15.373, 16,
			-56.558), Vector(-16.552, 16.039, -57.625), Vector(6.487, 10.024, -58.707), Vector(5.396, 10.015, -57.717), Vector(4.265,
			9.999, -56.587), Vector(8.364, 10.024, -56.849), Vector(7.159, 10.016, -55.824), Vector(5.594, 9.992, -54.546), Vector(1.025,
			9.995, -53.915), Vector(-0.981, 9.995, -52.121), Vector(3.594, 9.995, -51.731), Vector(1.508, 9.995, -49.119), Vector(-2.797,
			9.997, -50.597), Vector(-14.822, 10, -17.376), Vector(-13.123, 10, -13.862), Vector(-17.090, 10, -13.771), Vector(-47.508,
			15.990, 28.153));
		Global.MrDestructoFacing = Array(0, -23.862, -27.521, -14.963, 54.536, 62.496, 141.938, 145.102, 143.174, 133.830, -119.740,
			-104.315, -22.401, -13.947, -23.340, -22.896, 53.031, 59.903, 169.475, 145.003, 121.674, 71.098, 40.204, 40.402, 41.885,
			-16.298, -34.590, 133.879, 144.459, 143.668, 145.003, 57.387, 44.780, -120.526, -99.371, -22.500, -30.262, -41.364, 39.216,
			62.748, 72.631, -143.514, -74.059, -29.718, -31.201, 91.022, 68.231, -7.844, -9.723, -10.563, -6.954, -3.444, 1.450, -15.013,
			-16.617, -81.524, -125.321, -129.474, -135.802, -166.701, 134.324, -72.724, -23.044, 21.297, 22.632, 31.382, 16.304, 31.234,
			25.944, 46.609, 77.602, 81.854, 95.202, 115.126, 124.025, 117.548, 113.989, 121.948, 125.502, -177.248, -143.091, 99.877,
			101.508, 96.218, 95.279, 96.416, 97.256, 97.405, 92.708, -78.113, -81.568, -118.894, -150.925, -171.887, -176.138, -63.430,
			-76.630, -85.325, -81.519, -9.448, 10.920, 10.624, 11.217, 9.684, 9.882, 9.882, 9.882, 72.565, 98.075, 117.795, -77.344,
			-22.912, 107.292, 101.656, 86.682, 28.894, 42.435, 46.093, -100.695, -85.567, -22.291, 118.295, 95.262, 70.395, 113.549);
		Modify Global Variable(MrDestructoVector, Append To Array, 69);
		disabled Global.MrDestructoVector[0] = 420;
		Call Subroutine(MrDestructo);
	}
}

rule("J: Subroutine: MrDestructo")
{
	event
	{
		Subroutine;
		MrDestructo;
	}

	actions
	{
		If(Global.MrDestructoVector[Global.i] == 69);
			disabled Destroy All Dummy Bots;
			Destroy Dummy Bot(Team 1, 5);
			Wait(1.100, Ignore Condition);
			Pause Match Time;
		End;
		Abort If(Global.MrDestructoVector[Global.i] == 69);
		If(Global.MrDestructoVector[Global.i] == 0);
			Create Dummy Bot(Hero(Reaper), Team 1, 5, Global.MrDestructoVector[Global.i], Global.MrDestructoFacing[Global.i]);
			Global.MrDestructo = Last Created Entity;
			Wait(0.250, Ignore Condition);
			disabled Create In-World Text(All Players(All Teams), Custom String("Mr Destructo"), Position Of(Global.MrDestructo), 3, Do Not Clip,
				Visible To Position and String, Color(Purple), Default Visibility);
			disabled Global.MrDestructonametag = Last Text ID;
			Set Ultimate Ability Enabled(Global.MrDestructo, True);
			Global.MrDestructo.isInvincible = True;
		End;
		Wait(0.050, Ignore Condition);
		Set Ultimate Charge(Global.MrDestructo, 100);
		Teleport(Global.MrDestructo, Global.MrDestructoVector[Global.i]);
		Set Facing(Global.MrDestructo, Direction From Angles(Global.MrDestructoFacing[Global.i], 0), To World);
		Start Holding Button(Global.MrDestructo, Button(Ultimate));
		Wait(0.550, Ignore Condition);
		Global.i = Global.i + 1;
		Call Subroutine(MrDestructo);
	}
}